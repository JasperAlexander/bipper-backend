// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	"bipper-backend/models"
	"time"
)

type AddedBeep struct {
	Text string `json:"text"`
}

type BeepConnection struct {
	Edges    []*BeepEdge `json:"edges"`
	PageInfo *PageInfo   `json:"pageInfo"`
}

type BeepEdge struct {
	Cursor string       `json:"cursor"`
	Node   *models.Beep `json:"node"`
}

type CreateBeep struct {
	UserID         string  `json:"userId"`
	Text           string  `json:"text"`
	ConversationID *string `json:"conversationId"`
	ReferenceID    *string `json:"referenceId"`
	Sensitive      *bool   `json:"sensitive"`
	Config         *string `json:"config"`
	Location       *string `json:"location"`
}

type CreateUser struct {
	Email        string  `json:"email"`
	Name         string  `json:"name"`
	Username     *string `json:"username"`
	Description  *string `json:"description"`
	ProfileImg   *string `json:"profileImg"`
	BannerImg    *string `json:"bannerImg"`
	Dob          *int    `json:"dob"`
	Location     *string `json:"location"`
	URL          *string `json:"url"`
	PinnedBeepID *string `json:"pinnedBeepId"`
	Protected    *bool   `json:"protected"`
	Config       *string `json:"config"`
}

type PageInfo struct {
	HasNextPage     bool    `json:"hasNextPage"`
	HasPreviousPage bool    `json:"hasPreviousPage"`
	StartCursor     *string `json:"startCursor"`
	EndCursor       *string `json:"endCursor"`
}

type UpdateBeep struct {
	ID             string     `json:"id"`
	UserID         *string    `json:"userId"`
	Text           *string    `json:"text"`
	ConversationID *string    `json:"conversationId"`
	ReferenceID    *string    `json:"referenceId"`
	CreatedAt      *time.Time `json:"createdAt"`
	Sensitive      *bool      `json:"sensitive"`
	Config         *string    `json:"config"`
	Location       *string    `json:"location"`
}

type UpdateBeepMetrics struct {
	ID                string `json:"id"`
	ImpressionCount   *int   `json:"impressionCount"`
	RebeepCount       *int   `json:"rebeepCount"`
	QuoteCount        *int   `json:"quoteCount"`
	LikeCount         *int   `json:"likeCount"`
	ReplyCount        *int   `json:"replyCount"`
	URLClickCount     *int   `json:"urlClickCount"`
	ProfileClickCount *int   `json:"profileClickCount"`
	DetailsClickCount *int   `json:"detailsClickCount"`
	VideoViewCount    *int   `json:"videoViewCount"`
}

type UserConnection struct {
	Edges    []*UserEdge `json:"edges"`
	PageInfo *PageInfo   `json:"pageInfo"`
}

type UserEdge struct {
	Cursor string       `json:"cursor"`
	Node   *models.User `json:"node"`
}
